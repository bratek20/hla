// DO NOT EDIT! Autogenerated by HLA tool

class SomeProperty {
    private other = new OtherProperty
    private id2? = NUMBER

    static create(
        other: OtherProperty,
        id2: Optional<SomeId2>,
    ): SomeProperty {
        const instance = new SomeProperty()
        instance.other = other
        instance.id2 = id2.map(it => it.value).orElse(undefined)
        return instance
    }

    getOther(): OtherProperty {
        return this.other
    }

    getId2(): Optional<SomeId2> {
        return Optional.of(this.id2).map(it => new SomeId2(it))
    }
}

class SomeProperty2 {
    value = STRING
    private custom = ANY
    private someEnum = STRING
    private customOpt? = ANY

    static create(
        value: string,
        custom: any,
        someEnum: SomeEnum,
        customOpt: Optional<any> = Optional.empty(),
    ): SomeProperty2 {
        const instance = new SomeProperty2()
        instance.value = value
        instance.custom = custom
        instance.someEnum = someEnum.getName()
        instance.customOpt = customOpt.orElse(undefined)
        return instance
    }

    getValue(): string {
        return this.value
    }

    getCustom(): any {
        return this.custom
    }

    getSomeEnum(): SomeEnum {
        return SomeEnum.fromName(this.someEnum).get()
    }

    getCustomOpt(): Optional<any> {
        return Optional.of(this.customOpt)
    }
}