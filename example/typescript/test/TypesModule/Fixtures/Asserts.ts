// DO NOT EDIT! Autogenerated by HLA tool

namespace TypesModule.Assert {
    export function date(given: Date, expected: string) {
        AssertEquals(TypesModule.CustomTypesMapper.dateGetValue(given), expected)
    }

    export interface ExpectedDateRange {
        from?: string,
        to?: string,
    }
    export function dateRange(given: DateRange, expected: ExpectedDateRange) {
        if (expected.from !== undefined) {
            AssertEquals(TypesModule.CustomTypesMapper.dateGetValue(TypesModule.CustomTypesMapper.dateRangeGetFrom(given)), expected.from)
        }

        if (expected.to !== undefined) {
            AssertEquals(TypesModule.CustomTypesMapper.dateGetValue(TypesModule.CustomTypesMapper.dateRangeGetTo(given)), expected.to)
        }
    }

    export interface ExpectedDateRangeProperty {
        from?: string,
        to?: string,
    }
    export function dateRangeProperty(given: DateRangeProperty, expected: ExpectedDateRangeProperty) {
        if (expected.from !== undefined) {
            AssertEquals(TypesModule.CustomTypesMapper.dateGetValue(given.getFrom()), expected.from)
        }

        if (expected.to !== undefined) {
            AssertEquals(TypesModule.CustomTypesMapper.dateGetValue(given.getTo()), expected.to)
        }
    }
}