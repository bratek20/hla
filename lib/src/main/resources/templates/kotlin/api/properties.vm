package ${packageName}.api
#if($imports.size() > 0)

#foreach($import in $imports)
import ${import}.api.*
#end#end

#foreach($p in $properties)
data class ${p.name()}(
    #foreach($field in $p.fields)
    ${field.accessor()}val $field.name: $field.type.serializableName(),
    #end
) {
    #foreach($getter in $p.getters())
    fun ${getter.name}(): ${getter.type.name()} {
        return ${getter.type.deserialize("this.${getter.field}")}
    }
    #if($foreach.hasNext)

    #end
    #end
}#if($foreach.hasNext)

#end#end
#if($keys.size() > 0)

#foreach($k in $keys)

val $k.constantName = pl.bratek20.architecture.properties.api.${k.propertyKeyType}(
    "${k.keyName}",
    ${k.keyType}::class
)#end#end