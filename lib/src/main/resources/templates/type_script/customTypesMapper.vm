namespace ${moduleName}.CustomTypesMapper {
    #foreach($vo in $customTypes.simpleList)
    export function ${vo.createName()}(value: ${vo.boxedType.name()}): ${vo.name()} {
        //TODO
        return undefined
    }

    export function ${vo.getterName()}(it: ${vo.name()}): ${vo.boxedType.name()} {
        //TODO
        return undefined
    }
    #end
    #foreach($vo in $customTypes.complexList)
    #if($foreach.count == 1 && $customTypes.simpleList.size() > 0)

    #end
    export function ${vo.createName()}(#foreach($f in $vo.fields)$f.name: $f.type.name()#if($foreach.hasNext), #end#end): ${vo.name()} {
        //TODO
        return undefined
    }
    #foreach($field in $vo.fields)

    export function $vo.getterName(${field.name})(it: ${vo.name()}): ${field.type.name()} {
        //TODO
        return undefined
    }
    #end#end
}