namespace ${moduleName} {
#foreach($a in $simpleAsserts)
    export function ${a.diffFunName()}(given: ${a.api.name()}, expected: ${a.api.serializableName()}, path: string = ""): string {
        if (given.value != expected) { return `${path}value ${given.value} != ${expected}` }
        return ""
    }
    #if($foreach.hasNext || $complexAsserts.size() > 0)

    #end
#end
#foreach($a in $complexAsserts)
    export interface ${a.expectedName()} {
    #foreach($field in $a.fields)
        $field.name()?: $field.typeName(),
    #end
    }
    export function ${a.diffFunName()}(given: ${a.givenName()}, expected: ${a.expectedName()}, path: string = ""): string {
        const result: string[] = []

        #foreach($field in $a.fields)
        if (expected.${field.name()} !== undefined) {
            $field.diff("given", "expected.${field.name()}")
        }
        #if($foreach.hasNext)

        #end#end

        return result.join("\n")
    }
    #if($foreach.hasNext)

    #end
#end
}