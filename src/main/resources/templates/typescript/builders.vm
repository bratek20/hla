namespace ${moduleName}.Builder {
#foreach($dec in $declarations)
    #set($def = $dec.def)
    #set($vo = $dec.vo)
    export interface ${def.name} {
        #foreach($field in $def.fields)
        var $field.name?: $field.type,
        #end
    }
    export function ${dec.funName}(def:? ${def.name}): ${vo.name} {
        return new ${vo.name}(
        #foreach($field in $vo.fields)
            $field.name = ${field.prefix}def.${field.name}${field.suffix} ?? $field.defaultValue,
        #end
        )
    }
    #if($foreach.hasNext)

    #end
#end
}